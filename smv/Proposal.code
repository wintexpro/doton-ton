.globl	constructor
.public	constructor
.type	constructor, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7_with_init_storage$
}
IF
;; constructor protection
GETGLOB 6
THROWIF 51
PUSHINT 1
SETGLOB 6
;; end constructor protection
; Decode input parameters
; Decode _ballotInitState
;; decode TvmCell
LDREF
; Decode _publicKey
LDU 256
; Decode _votersAmount
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode _voteControllerAddress
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode _proposalData
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode initializerChoice
LDUQ 8
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 8
}
IFNOT
; Decode initializerAddress
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: _ballotInitState
;; param: _publicKey
;; param: _votersAmount
;; param: _voteControllerAddress
;; param: _proposalData
;; param: initializerChoice
;; param: initializerAddress
; constructor Proposal
;; get member sender
GETGLOB 9
;; push identifier voteControllerAddress
GETGLOB 16
SDEQ
THROWIFNOT 103
GETGLOB 2
NEQINT 0
THROWIFNOT 101
ACCEPT
; expValue
; end expValue
;; push identifier _ballotInitState
PUSH S6
; colValue
SETGLOB 10
; end colValue
; expValue
; end expValue
;; push identifier _publicKey
PUSH S5
; colValue
SETGLOB 11
; end colValue
; expValue
; end expValue
;; push identifier _votersAmount
PUSH S4
; colValue
SETGLOB 15
; end colValue
; expValue
; end expValue
;; push identifier _voteControllerAddress
PUSH S3
; colValue
SETGLOB 16
; end colValue
; expValue
; end expValue
;; push identifier _proposalData
PUSH S2
; colValue
SETGLOB 14
; end colValue
;; ++
; expValue
;; fetch votes
GETGLOB 17
;; push identifier initializerChoice
PUSH S2
SWAP
PUSH2 S1, S0
PUSHINT 8
DICTUGET
PUSHCONT {
	PLDU 256
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
; end expValue
INC
; colValue
NEWC
STU 256
ROTREV
PUSHINT 8
DICTUSETB
SETGLOB 17
; end colValue
; expValue
;; fetch addressVotes
GETGLOB 18
;; push identifier initializerAddress
PUSH S1
SWAP
; end expValue
;; push identifier initializerChoice
PUSH S3
; colValue
NEWC
STU 8
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 18
; end colValue
BLKDROP 7
; end constructor Proposal
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	getYesVotes
.public	getYesVotes
.type	getYesVotes, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
ENDS
; function getYesVotes
;; ret param: yesVotes
PUSHINT 0
;; return
;; index
PUSHINT 1
;; push identifier votes
GETGLOB 17
PUSHINT 8
DICTUGET
PUSHCONT {
	PLDU 256
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
NIP
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xcd9793e9
	PUSH S1
	STUR 256
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
DROP
; end function getYesVotes
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	getYesVotes_internal
.type	getYesVotes_internal, @function
; function getYesVotes
;; ret param: yesVotes
PUSHINT 0
;; return
;; index
PUSHINT 1
;; push identifier votes
GETGLOB 17
PUSHINT 8
DICTUGET
PUSHCONT {
	PLDU 256
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
NIP
; end function getYesVotes

.globl	getNoVotes
.public	getNoVotes
.type	getNoVotes, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
ENDS
; function getNoVotes
;; ret param: noVotes
PUSHINT 0
;; return
;; index
PUSHINT 0
;; push identifier votes
GETGLOB 17
PUSHINT 8
DICTUGET
PUSHCONT {
	PLDU 256
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
NIP
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xfda26886
	PUSH S1
	STUR 256
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
DROP
; end function getNoVotes
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	getNoVotes_internal
.type	getNoVotes_internal, @function
; function getNoVotes
;; ret param: noVotes
PUSHINT 0
;; return
;; index
PUSHINT 0
;; push identifier votes
GETGLOB 17
PUSHINT 8
DICTUGET
PUSHCONT {
	PLDU 256
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
NIP
; end function getNoVotes

.globl	vote
.public	vote
.type	vote, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode choice
LDU 8
; Decode ballotPublicKey
LDU 256
ENDS
;; param: choice
;; param: ballotPublicKey
; modifier isValidBallot
;; push identifier choice
PUSH S1
;; push identifier ballotPublicKey
PUSH S1
;; push identifier choice
PUSH S1
EQINT 0
;; short-circuiting ||
DUP
PUSHCONT {
	DROP
	;; push identifier choice
	PUSH S1
	EQINT 1
}
IFNOT
THROWIFNOT 100
ACCEPT
;; push identifier ballotInitState
GETGLOB 10
;; push identifier ballotPublicKey
PUSH S1
CALL $insert_pubkey_macro$
;; decl: ballotInitStateWithPublicKey
;; get member value
;; get member sender
GETGLOB 9
PUSHINT 11
SDSKIPFIRST
PLDU 256
;; push identifier ballotInitStateWithPublicKey
PUSH S1
HASHCU
;; ==
EQUAL
THROWIFNOT 100
; function vote
;; ++
; expValue
;; fetch votes
GETGLOB 17
;; push identifier choice
PUSH S5
SWAP
PUSH2 S1, S0
PUSHINT 8
DICTUGET
PUSHCONT {
	PLDU 256
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
; end expValue
INC
; colValue
NEWC
STU 256
ROTREV
PUSHINT 8
DICTUSETB
SETGLOB 17
; end colValue
; expValue
;; fetch addressVotes
GETGLOB 18
;; get member sender
GETGLOB 9
SWAP
; end expValue
;; push identifier choice
PUSH S6
; colValue
NEWC
STU 8
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 18
; end colValue
; end function vote
BLKDROP 5
; end modifier isValidBallot
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	voteByController
.public	voteByController
.type	voteByController, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode voter
LDMSGADDR
; Decode choice
LDU 8
; Decode messageType
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode handlerAddress
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: voter
;; param: choice
;; param: messageType
;; param: handlerAddress
; function voteByController
;; get member sender
GETGLOB 9
;; push identifier voteControllerAddress
GETGLOB 16
SDEQ
THROWIFNOT 100
;; ++
; expValue
;; fetch votes
GETGLOB 17
;; push identifier choice
PUSH S3
SWAP
PUSH2 S1, S0
PUSHINT 8
DICTUGET
PUSHCONT {
	PLDU 256
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
; end expValue
INC
; colValue
NEWC
STU 256
ROTREV
PUSHINT 8
DICTUSETB
SETGLOB 17
; end colValue
; expValue
;; fetch addressVotes
GETGLOB 18
;; push identifier voter
PUSH S4
SWAP
; end expValue
;; push identifier choice
PUSH S4
; colValue
NEWC
STU 8
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 18
; end colValue
;; if
;; index
PUSHINT 1
;; push identifier votes
GETGLOB 17
PUSHINT 8
DICTUGET
PUSHCONT {
	PLDU 256
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
;; index
PUSHINT 0
;; push identifier votes
GETGLOB 17
PUSHINT 8
DICTUGET
PUSHCONT {
	PLDU 256
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
;; +
ADD
;; push identifier votersAmount
GETGLOB 15
;; >=
GEQ
PUSHCONT {
	;; push identifier handlerAddress
	DUP
	FALSE
	NEWC
	STSLICECONST x6_
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	PUSHSLICE x40bebc200000000000000000000000000004_
	STSLICER
	STSLICECONST 0
	;; Remote call IHandler.executeProposal
	STSLICECONST 1
	NEWC
	STSLICECONST x21421cf5
	;; proposalPubKey
	GETGLOB 2
	STUR 256
	;; chainId
	;; push identifier chainId
	GETGLOB 12
	STUR 8
	;; nonce
	;; push identifier nonce
	GETGLOB 13
	STUR 64
	;; messageType
	;; push identifier messageType
	PUSH S3
	STUR 256
	;; data
	;; push identifier proposalData
	GETGLOB 14
	STUR 256
	STBREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
;; end if
BLKDROP 4
; end function voteByController
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	c7_to_c4
.type	c7_to_c4, @function
GETGLOB 2
NEWC
STU 256
GETGLOB 3
STUR 64
GETGLOB 6
STUR 1
NEWC
GETGLOB 15
GETGLOB 16
XCHG s2
STU 256
STSLICE
GETGLOB 10
GETGLOB 11
GETGLOB 12
GETGLOB 13
GETGLOB 14
GETGLOB 17
GETGLOB 18
REVERSE 9, 0
STBREF
STREF
STU 256
STU 8
STU 64
STU 256
STDICT
STDICT
ENDC
POP C4

.globl	c4_to_c7
.type	c4_to_c7, @function
PUSHROOT
CTOS        ; c4
LDU 256      ; pubkey c4
LDU 64      ; pubkey timestamp c4
LDU 1       ; pubkey [timestamp] constructor_flag memory
LDREFRTOS
LDU 256
SETGLOB 16
SETGLOB 15
LDREF
LDU 256
LDU 8
LDU 64
LDU 256
LDDICT
PLDDICT
SETGLOB 18
SETGLOB 17
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
TRUE
SETGLOB 1   ; pubkey [timestamp] constructor_flag
SETGLOB 6   ; pubkey [timestamp]
SETGLOB 3   ; D
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS        ; c4
DUP        ; c4 c4
SBITS      ; c4 bits
GTINT 1    ; c4 bits>1
PUSHCONT {
	LDU 256      ; pubkey c4
	LDU 64      ; pubkey timestamp c4
	LDU 1       ; pubkey [timestamp] constructor_flag memory
	LDREFRTOS
	LDU 256
	SETGLOB 16
	SETGLOB 15
	LDREF
	LDU 256
	LDU 8
	LDU 64
	LDU 256
	LDDICT
	PLDDICT
	SETGLOB 18
	SETGLOB 17
	SETGLOB 14
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	TRUE
	SETGLOB 1   ; pubkey [timestamp] constructor_flag
	SETGLOB 6   ; pubkey [timestamp]
	SETGLOB 3   ; D
	SETGLOB 2
}
PUSHCONT {
	PLDDICT   ; D
	; init ballotInitState
	NEWC
	ENDC
	SETGLOB 10
	; init publicKey
	PUSHINT 0
	SETGLOB 11
	; init chainId
	PUSHINT 1
	PUSH S1
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PLDU 8
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	SETGLOB 12
	; init nonce
	PUSHINT 2
	PUSH S1
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PLDU 64
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	SETGLOB 13
	; init proposalData
	PUSHINT 0
	SETGLOB 14
	; init votersAmount
	PUSHINT 0
	SETGLOB 15
	; init voteControllerAddress
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 16
	; init votes
	NEWDICT
	SETGLOB 17
	; init addressVotes
	NEWDICT
	SETGLOB 18
	; set contract pubkey
	PUSHINT 0
	SWAP
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0 ; constructor_flag
	SETGLOB 6
	TRUE
	SETGLOB 1
}
IFELSE

.internal-alias :main_internal,        0
.internal	:main_internal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: contract_balance
;; param: msg_balance
;; param: int_msg_info
;; param: msg_body_slice
PUSHINT 0  ; main_external trans id
PUSH S2
CTOS
LDU 4       ; bounced tail
LDMSGADDR   ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
IFRET
PUSH S1    ; body
SEMPTY     ; isEmpty
IFRET
PUSH S1 ; body
LDU 32  ; funcId body'
PUSH S1 ; funcId body' funcId
IFNOTRET
PUSH S1 ; funcId body' funcId
LESSINT 3            ; funcId body' funcId<3
PUSH S2              ; funcId body' funcId<3 funcId
PUSHINT 4294967293   ; funcId body' funcId<3 funcId 4294967293
GREATER              ; funcId body' funcId<3 funcId>4294967293
OR                   ; funcId body' funcId<3||funcId>4294967293
PUSHCONT {
	DROP2
	THROW 60
}
IFJMP
SWAP    ; body funcId
CALL 1
GETGLOB 7
ISNULL
PUSHCONT {
	DROP
	THROW 60
}
IF

.internal-alias :main_external,        -1
.internal	:main_external
PUSHINT -1 ; main_external trans id
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 9
PUSH S1
CALL $c4_to_c7_with_init_storage$
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP      ; signatureSlice msgSlice msgSlice
	HASHSU   ; signatureSlice msgSlice hashMsgSlice
	ROT
	GETGLOB 2
	CHKSIGNU      ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
IF
LDU 64                         ; timestamp msgSlice
SWAP                           ; msgSlice timestamp
CALL $replay_protection_macro$ ; msgSlice
LDU  32 ; funcId body
PUSH S1 ; funcId body funcId
LESSINT 3            ; funcId body' funcId<3
PUSH S2              ; funcId body' funcId<3 funcId
PUSHINT 4294967293   ; funcId body' funcId<3 funcId 4294967293
GREATER              ; funcId body' funcId<3 funcId>4294967293
OR                   ; funcId body' funcId<3||funcId>4294967293
PUSHCONT {
	DROP2
	THROW 60
}
IFJMP
SWAP    ; body funcId
CALL 1
GETGLOB 7
ISNULL
PUSHCONT {
	DROP
	THROW 60
}
IF

